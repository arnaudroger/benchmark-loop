# {method} {0x00007fa349daeb00} 'testBackwardLoop' '()J' in 'io/github/arnaudroger/LoopBenchmark'
#           [sp+0x30]  (sp of caller)
[Entry Point]
0x00007fa34c559a60: mov 0x8(%rsi),%r10d
0x00007fa34c559a64: shl $0x3,%r10
0x00007fa34c559a68: cmp %r10,%rax
0x00007fa34c559a6b: jne 0x00007fa34c3bee20  ;   {runtime_call}
0x00007fa34c559a71: data16 xchg %ax,%ax
0x00007fa34c559a74: nopl 0x0(%rax,%rax,1)
0x00007fa34c559a7c: data16 data16 xchg %ax,%ax
[Verified Entry Point]
0x00007fa34c559a80: mov %eax,-0x14000(%rsp)
0x00007fa34c559a87: push %rbp
0x00007fa34c559a88: sub $0x20,%rsp  ;*synchronization entry
                                    ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@-1 (line 72)
0x00007fa34c559a8c: mov %rsi,%r9
0x00007fa34c559a8f: mov 0x10(%rsi),%r10d  ;*getfield numbers
                                          ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@3 (line 73)
0x00007fa34c559a93: mov 0xc(%r12,%r10,8),%r8d  ;*arraylength
                                               ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@6 (line 73)
                                               ; implicit exception: dispatches to 0x00007fa34c559b4a
0x00007fa34c559a98: mov %r8d,%ecx
0x00007fa34c559a9b: dec %ecx  ;*isub
                              ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@8 (line 73)
0x00007fa34c559a9d: xor %r11d,%r11d
0x00007fa34c559aa0: test %ecx,%ecx
0x00007fa34c559aa2: jl L0006  ;*iflt
                              ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@11 (line 73)
0x00007fa34c559aa8: test %r8d,%r8d
0x00007fa34c559aab: jbe L0007
0x00007fa34c559ab1: cmp %r8d,%ecx
0x00007fa34c559ab4: jae L0007
0x00007fa34c559ab6: add $0xfffffffe,%r8d
0x00007fa34c559aba: shl $0x3,%r10  ;*lload_1
                                   ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@14 (line 74)
             L0000: movslq 0x10(%r10,%rcx,4),%r9
0x00007fa34c559ac3: add %r9,%r11  ;*ladd
                                  ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@22 (line 74)
0x00007fa34c559ac6: dec %ecx  ;*iinc
                              ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@24 (line 73)
0x00007fa34c559ac8: cmp %r8d,%ecx
0x00007fa34c559acb: jg L0000  ;*iflt
                              ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@11 (line 73)
0x00007fa34c559acd: cmp $0x2,%ecx
0x00007fa34c559ad0: jle L0008
0x00007fa34c559ad2: jmp L0002
0x00007fa34c559ad4: nopl 0x0(%rax,%rax,1)
0x00007fa34c559adc: data16 data16 xchg %ax,%ax
             L0001: mov %rax,%r11  ;*lload_1
                                   ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@14 (line 74)
             L0002: movslq 0x10(%r10,%rcx,4),%r8
0x00007fa34c559ae8: movslq 0xc(%r10,%rcx,4),%r9
0x00007fa34c559aed: movslq 0x8(%r10,%rcx,4),%rbx
0x00007fa34c559af2: movslq 0x4(%r10,%rcx,4),%rax
0x00007fa34c559af7: add %r11,%r8
0x00007fa34c559afa: add %r8,%r9
0x00007fa34c559afd: add %r9,%rbx
0x00007fa34c559b00: add %rbx,%rax  ;*ladd
                                   ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@22 (line 74)
0x00007fa34c559b03: add $0xfffffffc,%ecx  ;*iinc
                                          ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@24 (line 73)
0x00007fa34c559b06: cmp $0x2,%ecx
0x00007fa34c559b09: jg L0001  ;*iflt
                              ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@11 (line 73)
             L0003: cmp $0xffffffff,%ecx
0x00007fa34c559b0e: jle L0005  ;*lload_1
                               ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@14 (line 74)
             L0004: movslq 0x10(%r10,%rcx,4),%r11
0x00007fa34c559b15: add %r11,%rax  ;*ladd
                                   ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@22 (line 74)
0x00007fa34c559b18: dec %ecx  ;*iinc
                              ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@24 (line 73)
0x00007fa34c559b1a: cmp $0xffffffff,%ecx
0x00007fa34c559b1d: jg L0004  ;*iflt
                              ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@11 (line 73)
             L0005: add $0x20,%rsp
0x00007fa34c559b23: pop %rbp
0x00007fa34c559b24: test %eax,0x15e7a4d6(%rip)  # 0x00007fa3623d4000
                                                ;   {poll_return} *** SAFEPOINT POLL ***
0x00007fa34c559b2a: retq
             L0006: xor %eax,%eax
0x00007fa34c559b2d: jmp L0005
             L0007: mov $0xffffff86,%esi
0x00007fa34c559b34: mov %ecx,%ebp
0x00007fa34c559b36: mov %r9,(%rsp)
0x00007fa34c559b3a: nop
0x00007fa34c559b3b: callq 0x00007fa34c37e1a0  ; OopMap{[0]=Oop off=224}
                                              ;*lload_1
                                              ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@14 (line 74)
                                              ;   {runtime_call}
0x00007fa34c559b40: callq 0x00007fa3610e0c50  ;*lload_1
                                              ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@14 (line 74)
                                              ;   {runtime_call}
             L0008: mov %r11,%rax
0x00007fa34c559b48: jmp L0003
0x00007fa34c559b4a: mov $0xfffffff6,%esi
0x00007fa34c559b4f: callq 0x00007fa34c37e1a0  ; OopMap{off=244}
                                              ;*arraylength
                                              ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@6 (line 73)
                                              ;   {runtime_call}
0x00007fa34c559b54: callq 0x00007fa3610e0c50  ;*arraylength
                                              ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@6 (line 73)
                                              ;   {runtime_call}
0x00007fa34c559b59: hlt
0x00007fa34c559b5a: hlt
0x00007fa34c559b5b: hlt
0x00007fa34c559b5c: hlt
0x00007fa34c559b5d: hlt
0x00007fa34c559b5e: hlt
0x00007fa34c559b5f: hlt
[Exception Handler]
[Stub Code]
0x00007fa34c559b60: jmpq 0x00007fa34c3e5760  ;   {no_reloc}
[Deopt Handler Code]
0x00007fa34c559b65: callq 0x00007fa34c559b6a
0x00007fa34c559b6a: subq $0x5,(%rsp)
0x00007fa34c559b6f: jmpq 0x00007fa34c3c03c0  ;   {runtime_call}
0x00007fa34c559b74: hlt
0x00007fa34c559b75: hlt
0x00007fa34c559b76: hlt
0x00007fa34c559b77: hlt
