2, level 4, io.github.arnaudroger.LoopBenchmark::testBackwardLoop, version 463 (170 bytes) 

                             # {method} {0x00007fbab452df00} &apos;testBackwardLoop&apos; &apos;()J&apos; in &apos;io/github/arnaudroger/LoopBenchmark&apos;
                             #           [sp+0x30]  (sp of caller)
                             0x00007fbab51f4b60: mov    0x8(%rsi),%r10d
                             0x00007fbab51f4b64: shl    $0x3,%r10
                             0x00007fbab51f4b68: cmp    %r10,%rax
                             0x00007fbab51f4b6b: jne    0x00007fbab5045e20  ;   {runtime_call}
                             0x00007fbab51f4b71: data16 xchg %ax,%ax
                             0x00007fbab51f4b74: nopl   0x0(%rax,%rax,1)
                             0x00007fbab51f4b7c: data16 data16 xchg %ax,%ax
                           [Verified Entry Point]
  2.63%    2.28%             0x00007fbab51f4b80: mov    %eax,-0x14000(%rsp)
  1.12%    0.91%             0x00007fbab51f4b87: push   %rbp
  2.44%    1.14%             0x00007fbab51f4b88: sub    $0x20,%rsp         ;*synchronization entry
                                                                           ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@-1 (line 72)
  0.08%    0.13%             0x00007fbab51f4b8c: mov    %rsi,%r9
  1.15%    0.69%             0x00007fbab51f4b8f: mov    0x10(%rsi),%r10d   ;*getfield numbers
                                                                           ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@3 (line 73)
  2.59%    0.88%             0x00007fbab51f4b93: mov    0xc(%r12,%r10,8),%r8d  ;*arraylength
                                                                           ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@6 (line 73)
                                                                           ; implicit exception: dispatches to 0x00007fbab51f4c4a
  0.13%    0.12%             0x00007fbab51f4b98: mov    %r8d,%ecx
  0.01%    0.01%             0x00007fbab51f4b9b: dec    %ecx               ;*isub
                                                                           ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@8 (line 73)
  1.28%    1.09%             0x00007fbab51f4b9d: xor    %r11d,%r11d
  2.56%    0.64%             0x00007fbab51f4ba0: test   %ecx,%ecx
                  ╭          0x00007fbab51f4ba2: jl     0x00007fbab51f4c2b  ;*iflt
                  │                                                        ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@11 (line 73)
  0.11%    0.11%  │          0x00007fbab51f4ba8: test   %r8d,%r8d
                  │╭         0x00007fbab51f4bab: jbe    0x00007fbab51f4c2f
           0.01%  ││         0x00007fbab51f4bb1: cmp    %r8d,%ecx
                  ││╭        0x00007fbab51f4bb4: jae    0x00007fbab51f4c2f
  1.13%    1.47%  │││        0x00007fbab51f4bb6: add    $0xfffffffe,%r8d
  2.61%    3.69%  │││        0x00007fbab51f4bba: shl    $0x3,%r10          ;*lload_1
                  │││                                                      ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@14 (line 74)
  0.15%    0.10%  │││↗       0x00007fbab51f4bbe: movslq 0x10(%r10,%rcx,4),%r9
  3.23%    3.31%  ││││       0x00007fbab51f4bc3: add    %r9,%r11           ;*ladd
                  ││││                                                     ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@22 (line 74)
  3.15%    3.23%  ││││       0x00007fbab51f4bc6: dec    %ecx               ;*iinc
                  ││││                                                     ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@24 (line 73)
  0.33%    0.42%  ││││       0x00007fbab51f4bc8: cmp    %r8d,%ecx
                  │││╰       0x00007fbab51f4bcb: jg     0x00007fbab51f4bbe  ;*iflt
                  │││                                                      ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@11 (line 73)
  0.11%    0.20%  │││        0x00007fbab51f4bcd: cmp    $0x2,%ecx
                  │││        0x00007fbab51f4bd0: jle    0x00007fbab51f4c45
                  │││ ╭      0x00007fbab51f4bd2: jmp    0x00007fbab51f4be3
                  │││ │      0x00007fbab51f4bd4: nopl   0x0(%rax,%rax,1)
                  │││ │      0x00007fbab51f4bdc: data16 data16 xchg %ax,%ax
  0.11%           │││ │↗     0x00007fbab51f4be0: mov    %rax,%r11          ;*lload_1
                  │││ ││                                                   ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@14 (line 74)
  3.41%    3.05%  │││ ↘│     0x00007fbab51f4be3: movslq 0x10(%r10,%rcx,4),%r8
  4.46%    4.11%  │││  │     0x00007fbab51f4be8: movslq 0xc(%r10,%rcx,4),%r9
  0.38%    0.43%  │││  │     0x00007fbab51f4bed: movslq 0x8(%r10,%rcx,4),%rbx
  0.90%    0.96%  │││  │     0x00007fbab51f4bf2: movslq 0x4(%r10,%rcx,4),%rax
  2.13%    2.54%  │││  │     0x00007fbab51f4bf7: add    %r11,%r8
  5.53%    5.61%  │││  │     0x00007fbab51f4bfa: add    %r8,%r9
  3.49%    4.52%  │││  │     0x00007fbab51f4bfd: add    %r9,%rbx
  7.58%    7.83%  │││  │     0x00007fbab51f4c00: add    %rbx,%rax          ;*ladd
                  │││  │                                                   ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@22 (line 74)
  7.76%    8.00%  │││  │     0x00007fbab51f4c03: add    $0xfffffffc,%ecx   ;*iinc
                  │││  │                                                   ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@24 (line 73)
  0.03%    0.01%  │││  │     0x00007fbab51f4c06: cmp    $0x2,%ecx
                  │││  ╰     0x00007fbab51f4c09: jg     0x00007fbab51f4be0  ;*iflt
                  │││                                                      ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@11 (line 73)
                  │││        0x00007fbab51f4c0b: cmp    $0xffffffff,%ecx
                  │││   ╭    0x00007fbab51f4c0e: jle    0x00007fbab51f4c1f  ;*lload_1
                  │││   │                                                  ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@14 (line 74)
  0.10%           │││   │↗   0x00007fbab51f4c10: movslq 0x10(%r10,%rcx,4),%r11
  3.64%    3.99%  │││   ││   0x00007fbab51f4c15: add    %r11,%rax          ;*ladd
                  │││   ││                                                 ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@22 (line 74)
  0.02%    0.01%  │││   ││   0x00007fbab51f4c18: dec    %ecx               ;*iinc
                  │││   ││                                                 ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@24 (line 73)
                  │││   ││   0x00007fbab51f4c1a: cmp    $0xffffffff,%ecx
                  │││   │╰   0x00007fbab51f4c1d: jg     0x00007fbab51f4c10  ;*iflt
                  │││   │                                                  ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@11 (line 73)
  0.11%           │││   ↘ ↗  0x00007fbab51f4c1f: add    $0x20,%rsp
  3.76%    3.74%  │││     │  0x00007fbab51f4c23: pop    %rbp
  0.01%    0.01%  │││     │  0x00007fbab51f4c24: test   %eax,0x1805b3d6(%rip)        # 0x00007fbacd250000
                  │││     │                                                ;   {poll_return}
  0.03%    0.01%  │││     │  0x00007fbab51f4c2a: retq   
                  ↘││     │  0x00007fbab51f4c2b: xor    %eax,%eax
                   ││     ╰  0x00007fbab51f4c2d: jmp    0x00007fbab51f4c1f
                   ↘↘        0x00007fbab51f4c2f: mov    $0xffffff86,%esi
                             0x00007fbab51f4c34: mov    %ecx,%ebp
                             0x00007fbab51f4c36: mov    %r9,(%rsp)
                             0x00007fbab51f4c3a: nop
                             0x00007fbab51f4c3b: callq  0x00007fbab50051a0  ; OopMap{[0]=Oop off=224}
                                                                           ;*lload_1
                                                                           ; - io.github.arnaudroger.LoopBenchmark::testBackwardLoop@14 (line 74)